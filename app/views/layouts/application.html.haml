!!!
%html
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    %title Huginn.io
    = csrf_meta_tags
    = csp_meta_tag
    = stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload'
    = javascript_include_tag 'application', 'data-turbolinks-track': 'reload'
    - if current_user.present?
      :css
        [data-show-for-user="#{current_user.id}"] {
          display: inherit !important;
        }
  %body{'data-controller' => controller_name, 'data-action' => action_name}
    %nav.navbar.navbar-default.navbar-fixed.top{role: 'navigation'}
      .container
        .navbar-header
          %button.navbar-toggle.collapsed{data: {toggle: 'collapse', target: '#main-navigation'}}
            %span.sr-only
              Toggle navigation
            %span.icon-bar
            %span.icon-bar
            %span.icon-bar
          %a.navbar-brand{href: '/'}
            Huginn.io
        .collapse.navbar-collapse#main-navigation
          %ul.nav.navbar-nav
            = nav_link 'Docs', documentation_index_path, 'documentation'
          %ul.nav.navbar-nav
            = nav_link "Agent Database", agents_path, 'agents'
          %ul.nav.navbar-nav
            = nav_link "Scenarios", scenarios_path, 'scenarios'
          %ul.nav.navbar-nav
            = nav_link "Agent Gems", agent_gems_path, 'agent_gems'
          %ul.nav.navbar-nav.navbar-right
            - if current_user
              %li
                = nav_link "Account", edit_user_registration_path, 'devise/registrations'
              %li
                = link_to "Log out", destroy_user_session_path, method: :delete, id: "headone"
            - else
              %li
                = link_to 'Log in', new_user_session_path, class: "button", id: "headone"
              %li
                = link_to 'Sign up', new_user_registration_path, class: "button", id: "headtwo"
    .container
      - flash.keys.each do |k|
        - klass = (k == 'notice' ? :success : :danger)
        %div{class: "flash-overlay alert alert-dismissable alert-#{klass}"}
          %button.close{type: 'button', data: {dismiss: "alert"}}
            x
          = flash[k]
      = yield

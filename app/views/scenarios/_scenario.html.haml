- cache [scenario, show] do
  %h3{id: scenario.to_param}
    = link_to scenario.name, scenario
    - if scenario.icon.blank?
      = scenario_label(scenario, icon('gear'))
    - else
      = scenario_label(scenario, icon(scenario.icon))

    .btn-group.btn-group-xs.pull-right
      - if show
        = link_to 'Back', scenarios_path, class: "btn btn-default"
      - else
        = link_to 'Download', download_scenario_path(scenario), class: "btn btn-default"
        = link_to 'Details', scenario, class: "btn btn-default"
      = link_to 'Delete', scenario_path(scenario), method: :delete, class: "btn btn-danger hidden", data: {'show-for-user': scenario.user_id, confirm: 'Are you sure?'}
  %p
    - scenario.agents.uniq(&:short_type).each do |agent|
      = link_to agents_path(anchor: agent.short_type) do
        %span.label.label-default= agent.human_name
  .well.description
    = markdown(scenario.description)
  - if show
    = render_agents_diagram(scenario.agents, layout: 'dot')
    - scenario.agents.each do |agent|
      %h4{id: agent.guid}
        = agent.name
        %span.text-muted
          = surround ' (', ')' do
            = link_to agent.short_type, agents_path(anchor: agent.short_type)
      - %w(schedule keep_events_for propagate_immediately disabled).each do |attr|
        - unless agent.send(attr).nil?
          = label_tag attr
          = agent.send(attr.to_sym)
          %br
      %pre.options{data: {index: agent.guid, requires_merge: false}}
      :coffeescript
        updated = #{raw agent.options.to_json}
        delta = jsondiffpatch.diff({}, updated)
        $("pre[data-index=#{agent.guid}]").html(jsondiffpatch.formatters.html.format(delta, {}))
